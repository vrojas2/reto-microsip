{"version":3,"sources":["components/create/ByCosto.js","components/create/ByPrecio.js","components/create/Insert.js","components/delet/Delet.js","components/update/UpdateByCosto.js","components/update/UpdateByPrecio.js","components/update/Update.js","components/CRUD.js","App.js","index.js"],"names":["ByCosto","props","data","setModalInsertar","setData","useForm","register","errors","formState","handleSubmit","useState","costo","setCosto","nuevoID","length","id","ivaValue","parseFloat","precioValue","className","onSubmit","datosForm","iva","precio","objetoNuevo","nombre","dataNueva","push","readOnly","type","name","value","required","maxLength","message","pattern","step","onChange","e","target","ByPrecio","setPrecio","costoValue","Insert","modalInsertar","indicator","setIndicator","isOpen","variant","onClick","Delet","setModalEliminar","modalEliminar","articuloSelect","filter","articulo","UpdateByCosto","setModalEditar","setArticuloSelect","costoInicial","ID","handleChange","prevState","costoTemp","console","log","isNaN","map","UpdateByPrecio","precioInicial","Update","modalEditar","CRUD","seleccionArticulo","caso","fontSize","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d39f75a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const ByCosto = (props) => {\r\n    const { data, setModalInsertar, setData } = props;\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n\r\n    const [costo, setCosto] = useState(0);\r\n\r\n    const nuevoID = data[data.length - 1].id + 1;\r\n\r\n    const onSubmit = datosForm => {\r\n        let iva = ivaValue()\r\n        let precio = precioValue()\r\n        let objetoNuevo = {\r\n            id: nuevoID,\r\n            nombre: datosForm.nombre,\r\n            costo: datosForm.costo,\r\n            iva: iva,\r\n            precio: precio\r\n        }\r\n        var dataNueva = data;\r\n        dataNueva.push(objetoNuevo);\r\n\r\n        setData(dataNueva);\r\n        setModalInsertar(false)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setCosto(e.target.value);\r\n    }\r\n\r\n    const ivaValue = () => {\r\n        var iva = (costo / 100) * 16\r\n        return parseFloat(iva);\r\n    }\r\n\r\n    const precioValue = () => {\r\n        var iva = (costo / 100) * 16\r\n        return (parseFloat(iva) + parseFloat(costo));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <div>\r\n                <h5 className=\"text-center mt-4\">Agregar por costo</h5>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>ID</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name=\"id\"\r\n                    value={nuevoID}\r\n                />\r\n                <br />\r\n\r\n                <label>Artículo</label>\r\n                <input\r\n                    {...register(\"nombre\", {\r\n                        required: \"Nombre requerido\"\r\n                    })}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    maxLength=\"30\"\r\n                />\r\n                {errors.nombre && (\r\n                    <div className=\"text-danger\">{errors.nombre.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Costo</label>\r\n                <input\r\n                    {...register(\"costo\", {\r\n                        required: \"Costo requerido\",\r\n                        pattern: {\r\n                            value: /^[0-9]+[.]+[0-9]*$/,\r\n                            message: 'Solo numeros con decimal'\r\n                        }\r\n                    })\r\n                    }\r\n                    className=\"form-control\"\r\n                    name=\"costo\"\r\n                    step=\"0.01\"\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.costo && (\r\n                    <div className=\"text-danger\">{errors.costo.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <label>IVA (16%)</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    name=\"iva\"\r\n                    value={ivaValue()}\r\n                />\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Precio</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    name=\"precio\"\r\n                    value={precioValue()}\r\n                />\r\n                <br />\r\n\r\n                <button\r\n                    className=\"btn btn-primary mt-3\"\r\n                    type=\"submit\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const ByPrecio = (props) => {\r\n    const { data, setModalInsertar, setData } = props;\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n\r\n    const [precio, setPrecio] = useState(0);\r\n\r\n    const nuevoID = data[data.length - 1].id + 1;\r\n\r\n    const onSubmit = datosForm => {\r\n        let iva = ivaValue()\r\n        let costo = costoValue()\r\n        let objetoNuevo = {\r\n            id: nuevoID,\r\n            nombre: datosForm.nombre,\r\n            costo: costo,\r\n            iva: iva,\r\n            precio: datosForm.precio\r\n        }\r\n        var dataNueva = data;\r\n        dataNueva.push(objetoNuevo);\r\n\r\n        setData(dataNueva);\r\n        setModalInsertar(false)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setPrecio(e.target.value);\r\n    }\r\n\r\n    const ivaValue = () => {\r\n        var iva = (precio / 116) * 16\r\n        return parseFloat(iva);\r\n    }\r\n\r\n    const costoValue = () => {\r\n        var costo = (precio / 116) * 100\r\n        return parseFloat(costo);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div>\r\n                <h5 className=\"text-center mt-4\">Agregar por precio</h5>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>ID</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name=\"id\"\r\n                    value={nuevoID}\r\n                />\r\n                <br />\r\n\r\n                <label>Artículo</label>\r\n                <input\r\n                    {...register(\"nombre\", {\r\n                        required: \"Nombre requerido\"\r\n                    })}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    maxLength=\"30\"\r\n                />\r\n                {errors.nombre && (\r\n                    <div className=\"text-danger\">{errors.nombre.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Costo</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    name=\"costo\"\r\n                    value={costoValue()}\r\n                />\r\n                <br />\r\n\r\n                <label>IVA (16%)</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name=\"iva\"\r\n                    value={ivaValue()}\r\n                />\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Precio</label>\r\n                <input\r\n                    {...register(\"precio\", {\r\n                        required: \"Precio requerido\",\r\n                        pattern: {\r\n                            value: /^[0-9]+[.]+[0-9]*$/,\r\n                            message: 'Solo numeros con decimal'\r\n                        }\r\n                    })\r\n                    }\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    name=\"precio\"\r\n                    step=\"0.01\"\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.precio && (\r\n                    <div className=\"text-danger\">{errors.precio.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <button\r\n                    className=\"btn btn-primary mt-4\"\r\n                    type=\"submit\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\n\r\nimport { ByCosto } from './ByCosto';\r\nimport { ByPrecio } from './ByPrecio';\r\n\r\nexport const Insert = (props) => {\r\n    const { data, setModalInsertar, modalInsertar, setData } = props;\r\n\r\n    const [indicator, setIndicator] = useState(0);\r\n\r\n    return (\r\n        <Modal isOpen={modalInsertar}>\r\n            <ModalHeader>\r\n                <div>\r\n                    <h3>Agregar un artículo</h3>\r\n                </div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"btnsInsert\">\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            setIndicator(1);\r\n                        }}\r\n                    >\r\n                        Agregar por Costo\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            setIndicator(2);\r\n                        }}\r\n                    >\r\n                        Agregar por Precio\r\n                    </button>\r\n                </div>\r\n\r\n                {indicator === 1 ? (\r\n                    <ByCosto\r\n                        data={data}\r\n                        setModalInsertar={setModalInsertar}\r\n                        setData={setData}\r\n                    />\r\n                ) : null}\r\n                {indicator === 2 ? (\r\n                    <ByPrecio\r\n                        data={data}\r\n                        setModalInsertar={setModalInsertar}\r\n                        setData={setData}\r\n                    />\r\n                ) : null}\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => setModalInsertar(false)}\r\n                >\r\n                    Cancelar\r\n                </button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport { Modal, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport const Delet = (props) => {\r\n    const {\r\n        setModalEliminar,\r\n        modalEliminar,\r\n        articuloSelect,\r\n        data,\r\n        setData\r\n    } = props;\r\n\r\n    const eliminar = () => {\r\n        setData(data.filter(articulo => articulo.id !== articuloSelect.id));\r\n        setModalEliminar(false);\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalEliminar}>\r\n            <ModalBody>\r\n                <div className=\"text-center\">\r\n                    Estás seguro que deseas eliminar el articulo \"<b>{articuloSelect.nombre}</b>\"\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => eliminar()}\r\n                >\r\n                    Sí\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => setModalEliminar(false)}\r\n                >\r\n                    No\r\n                </button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const UpdateByCosto = (props) => {\r\n    const {\r\n        setModalEditar,\r\n        articuloSelect,\r\n        data,\r\n        setData,\r\n        setArticuloSelect\r\n    } = props;\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n\r\n    const costoInicial = parseFloat(articuloSelect.costo)\r\n\r\n    const [costo, setCosto] = useState(costoInicial);\r\n\r\n    const ID = articuloSelect.id\r\n\r\n    const onSubmit = datosForm => {\r\n        let iva = ivaValue()\r\n        let precio = precioValue()\r\n        let objetoNuevo = {\r\n            id: ID,\r\n            nombre: datosForm.nombre,\r\n            costo: parseFloat(datosForm.costo),\r\n            iva: iva,\r\n            precio: precio\r\n        }\r\n        var dataNueva = data;\r\n        dataNueva.map(articulo => {\r\n            if (articulo.id === ID) {\r\n                articulo.nombre = objetoNuevo.nombre;\r\n                articulo.costo = objetoNuevo.costo;\r\n                articulo.iva = objetoNuevo.iva;\r\n                articulo.precio = objetoNuevo.precio;\r\n            }\r\n        });\r\n        setData(dataNueva);\r\n        setModalEditar(false)\r\n    }\r\n\r\n    const ivaValue = () => {\r\n        var iva = (costo / 100) * 16\r\n        return parseFloat(iva);\r\n    }\r\n\r\n    const precioValue = () => {\r\n        var iva = (costo / 100) * 16\r\n        return (parseFloat(iva) + parseFloat(costo));\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        if (name === \"nombre\") {\r\n            setArticuloSelect((prevState) => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }));\r\n        } else {\r\n            let costoTemp = parseFloat(e.target.value)\r\n            console.log(costoTemp);\r\n            if (isNaN(costoTemp)) {\r\n                costoTemp = null;\r\n                setCosto(costoTemp);\r\n                setArticuloSelect((prevState) => ({\r\n                    ...prevState,\r\n                    [name]: costoTemp\r\n                }));\r\n            } else {\r\n                setCosto(costoTemp);\r\n                setArticuloSelect((prevState) => ({\r\n                    ...prevState,\r\n                    [name]: costoTemp\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <div>\r\n                <h5 className=\"text-center mt-4\">Editar por costo</h5>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>ID</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name=\"id\"\r\n                    value={articuloSelect.id}\r\n                />\r\n                <br />\r\n\r\n                <label>Artículo</label>\r\n                <input\r\n                    {...register(\"nombre\", {\r\n                        required: \"Nombre requerido\"\r\n                    })}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    maxLength=\"30\"\r\n                    value={articuloSelect.nombre}\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.nombre && (\r\n                    <div className=\"text-danger\">{errors.nombre.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Costo</label>\r\n                <input\r\n                    {...register(\"costo\", {\r\n                        required: \"Costo requerido\",\r\n                        pattern: {\r\n                            value: /^[0-9]+[.]+[0-9]*$/,\r\n                            message: 'Solo numeros con decimal'\r\n                        }\r\n                    })\r\n                    }\r\n                    className=\"form-control\"\r\n                    name=\"costo\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={articuloSelect.costo}\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.costo && (\r\n                    <div className=\"text-danger\">{errors.costo.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <label>IVA (16%)</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    name=\"iva\"\r\n                    value={ivaValue()}\r\n                />\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Precio</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    name=\"precio\"\r\n                    value={precioValue()}\r\n                />\r\n                <br />\r\n\r\n                <button\r\n                    className=\"btn btn-success mt-3\"\r\n                    type=\"submit\"\r\n                >\r\n                    Editar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const UpdateByPrecio = (props) => {\r\n\r\n    const {\r\n        setModalEditar,\r\n        articuloSelect,\r\n        data,\r\n        setData,\r\n        setArticuloSelect\r\n    } = props;\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n\r\n    const precioInicial = parseFloat(articuloSelect.precio)\r\n    const [precio, setPrecio] = useState(precioInicial);\r\n\r\n    const ID = articuloSelect.id\r\n\r\n    const onSubmit = datosForm => {\r\n        let iva = ivaValue()\r\n        let costo = costoValue()\r\n        let objetoNuevo = {\r\n            id: ID,\r\n            nombre: datosForm.nombre,\r\n            costo: datosForm.precio,\r\n            iva: iva,\r\n            precio: costo\r\n        }\r\n        var dataNueva = data;\r\n        dataNueva.map(articulo => {\r\n            if (articulo.id === ID) {\r\n                articulo.nombre = objetoNuevo.nombre;\r\n                articulo.costo = objetoNuevo.costo;\r\n                articulo.iva = objetoNuevo.iva;\r\n                articulo.precio = objetoNuevo.precio;\r\n            }\r\n        });\r\n        setData(dataNueva);\r\n        setModalEditar(false)\r\n    }\r\n\r\n    const ivaValue = () => {\r\n        var iva = (precio / 116) * 16\r\n        return parseFloat(iva);\r\n    }\r\n\r\n    const costoValue = () => {\r\n        var costo = (precio / 116) * 100\r\n        return parseFloat(costo);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        if (name === \"nombre\") {\r\n            setArticuloSelect((prevState) => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }));\r\n        } else {\r\n            let costoTemp = parseFloat(e.target.value)\r\n            console.log(costoTemp);\r\n            if (isNaN(costoTemp)){\r\n                costoTemp = null;\r\n                setPrecio(costoTemp);\r\n                setArticuloSelect((prevState) => ({\r\n                    ...prevState,\r\n                    [name]: costoTemp\r\n                }));\r\n            } else {\r\n                setPrecio(costoTemp);\r\n                setArticuloSelect((prevState) => ({\r\n                    ...prevState,\r\n                    [name]: costoTemp\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <div>\r\n                <h5 className=\"text-center mt-4\">Editar por costo</h5>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>ID</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    name=\"id\"\r\n                    value={articuloSelect.id}\r\n                />\r\n                <br />\r\n\r\n                <label>Artículo</label>\r\n                <input\r\n                    {...register(\"nombre\", {\r\n                        required: \"Nombre requerido\"\r\n                    })}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    maxLength=\"30\"\r\n                    value={articuloSelect.nombre}\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.nombre && (\r\n                    <div className=\"text-danger\">{errors.nombre.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Costo</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    name=\"costo\"\r\n                    value={costoValue()}\r\n                />\r\n                {errors.costo && (\r\n                    <div className=\"text-danger\">{errors.costo.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <label>IVA (16%)</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    name=\"iva\"\r\n                    value={ivaValue()}\r\n                />\r\n                <br />\r\n\r\n                <label className=\"mt-2\">Precio</label>\r\n                <input\r\n                    {...register(\"precio\", {\r\n                        required: \"Precio requerido\",\r\n                        pattern: {\r\n                            value: /^[0-9]+[.]+[0-9]*$/,\r\n                            message: 'Solo numeros con decimal'\r\n                        }\r\n                    })\r\n                    }\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    name=\"precio\"\r\n                    step=\"0.01\"\r\n                    value={articuloSelect.precio}\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.precio && (\r\n                    <div className=\"text-danger\">{errors.precio.message}</div>\r\n                )}\r\n                <br />\r\n\r\n                <button\r\n                    className=\"btn btn-success mt-3\"\r\n                    type=\"submit\"\r\n                >\r\n                    Editar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport { UpdateByCosto } from './UpdateByCosto';\r\nimport { UpdateByPrecio } from './UpdateByPrecio';\r\n\r\nexport const Update = (props) => {\r\n    const {\r\n        setModalEditar,\r\n        modalEditar,\r\n        articuloSelect,\r\n        data,\r\n        setData,\r\n        setArticuloSelect\r\n    } = props;\r\n\r\n    const [indicator, setIndicator] = useState(0);\r\n\r\n    return (\r\n        <Modal isOpen={modalEditar}>\r\n            <ModalHeader>\r\n                <div>\r\n                    <h3>Editar Articulo \"<b>{articuloSelect.nombre}</b>\"</h3>\r\n                </div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n            <div className=\"btnsInsert\">\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            setIndicator(1);\r\n                        }}\r\n                    >\r\n                        Editar por Costo\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            setIndicator(2);\r\n                        }}\r\n                    >\r\n                        Editar por Precio\r\n                    </button>\r\n                </div>\r\n\r\n                {indicator === 1 ? (\r\n                    <UpdateByCosto\r\n                        articuloSelect = {articuloSelect}\r\n                        setArticuloSelect = {setArticuloSelect}\r\n                        data = {data}\r\n                        setData = {setData}\r\n                        setModalEditar = {setModalEditar}\r\n                    />\r\n                ) : null}\r\n                {indicator === 2 ? (\r\n                    <UpdateByPrecio\r\n                        articuloSelect = {articuloSelect}\r\n                        setArticuloSelect = {setArticuloSelect}\r\n                        data = {data}\r\n                        setData = {setData}\r\n                        setModalEditar = {setModalEditar}\r\n                    />\r\n                ) : null}\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => setModalEditar(false)}\r\n                >\r\n                    Cancelar\r\n                </button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Insert } from './create/Insert';\r\nimport { Delet } from './delet/Delet';\r\nimport { Update } from './update/Update';\r\n\r\nexport const CRUD = () => {\r\n\r\n    var dataArticulos = [\r\n        { id: 1, nombre: \"toalla\", costo: 300, iva: 48, precio: 348 },\r\n        { id: 2, nombre: \"limonada\", costo: 100, iva: 16, precio: 116 },\r\n        { id: 3, nombre: \"refresco\", costo: 150, iva: 24, precio: 174 }\r\n    ];\r\n\r\n    const [data, setData] = useState(dataArticulos);\r\n    const [modalInsertar, setModalInsertar] = useState(false);\r\n    const [modalEliminar, setModalEliminar] = useState(false);\r\n    const [modalEditar, setModalEditar] = useState(false);\r\n\r\n    const [articuloSelect, setArticuloSelect] = useState({\r\n        id: '',\r\n        nombre: '',\r\n        costo: '',\r\n        iva: '',\r\n        precio: ''\r\n    });\r\n\r\n    const abrirModalInsertar = () => {\r\n        setModalInsertar(true);\r\n    }\r\n\r\n    const seleccionArticulo = (articulo, caso) => {\r\n        setArticuloSelect(articulo);\r\n        (caso === 'Editar') ? setModalEditar(true) : setModalEliminar(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"title\">\r\n                <h2 className=\"text-center\">\r\n                    Control de artículos\r\n                </h2>\r\n            </div>\r\n            \r\n            <div className=\"container mt-4\">\r\n                <div className=\"\">\r\n                    <button className=\"btn btn-success\"\r\n                        onClick={() => abrirModalInsertar()}\r\n                    >Agregar <AddIcon /></button>\r\n                </div>\r\n                <div className=\"table-responsive mt-3\">\r\n                    <table className=\"table text-center\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Nombre</th>\r\n                                <th>Costo</th>\r\n                                <th>IVA</th>\r\n                                <th>Precio</th>\r\n                                <th>Acciones</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map(articulo => (\r\n                                <tr>\r\n                                    <td>{articulo.id}</td>\r\n                                    <td>{articulo.nombre}</td>\r\n                                    <td>{articulo.costo}</td>\r\n                                    <td>{articulo.iva}</td>\r\n                                    <td>{articulo.precio}</td>\r\n                                    <td className=\"optionBtns\">\r\n                                        <button className=\"btn btn-primary\"\r\n                                            onClick={() => seleccionArticulo(articulo, 'Editar')}\r\n                                        >\r\n                                            <EditIcon\r\n                                                fontSize=\"small\"\r\n                                            />\r\n                                        </button>\r\n                                        <button className=\"btn btn-danger\"\r\n                                            onClick={() => seleccionArticulo(articulo, 'Eliminar')}\r\n                                        >\r\n                                            <DeleteIcon />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <Insert\r\n                        setModalInsertar={setModalInsertar}\r\n                        data={data}\r\n                        modalInsertar={modalInsertar}\r\n                        setData={setData}\r\n                    />\r\n\r\n                    <Delet\r\n                        articuloSelect = {articuloSelect}\r\n                        setModalEliminar = {setModalEliminar}\r\n                        modalEliminar = {modalEliminar}\r\n                        data = {data}\r\n                        setData = {setData}\r\n                    />\r\n\r\n                    <Update\r\n                        articuloSelect = {articuloSelect}\r\n                        setModalEditar = {setModalEditar}\r\n                        modalEditar = {modalEditar}\r\n                        data = {data}\r\n                        setData = {setData}\r\n                        setArticuloSelect = {setArticuloSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { CRUD } from \"./components/CRUD\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CRUD/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport './styles/styles.scss';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}